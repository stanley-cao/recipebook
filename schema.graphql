scalar DateTime

type Ingredient { id: ID!, name: String!, quantity: String }
type Step { id: ID!, index: Int!, text: String!, imageUrl: String }

type Recipe {
  id: ID!
  title: String!
  slug: String
  description: String
  coverImage: String
  images: [String!]!
  tags: [String!]!
  estimatedMinutes: Int
  steps: [Step!]!
  ingredients: [Ingredient!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input NewIngredient { name: String!, quantity: String }
input NewStep { index: Int!, text: String!, imageUrl: String }
input NewRecipe {
  title: String!
  slug: String
  description: String
  coverImage: String
  images: [String!]
  tags: [String!]
  estimatedMinutes: Int
  ingredients: [NewIngredient!]!
  steps: [NewStep!]!
}

type Query {
  recipes(tags: [String!]): [Recipe!]!
  recipe(id: ID!): Recipe
}

type Mutation {
  addRecipe(input: NewRecipe!): Recipe!
  deleteRecipe(id: ID!): Boolean!
}

schema {
  query: Query
  mutation: Mutation
}